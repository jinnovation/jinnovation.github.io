# -*- after-save-hook: (org-html-export-to-html); -*-

#+TITLE: Jonathan Jin
#+AUTHOR: Jonathan Jin
#+EMAIL: jjin082693@gmail.com

#+STARTUP: showall

#+OPTIONS: num:nil todo:nil toc:nil creator:nil author:nil timestamp:nil

#+HTML_HEAD_EXtRA: <link rel="stylesheet" href="./css/sakura.css" type"text/css"/>
#+HTML_HEAD_EXtRA: <link rel="stylesheet" href="./css/extra.css" type"text/css"/>

#+INFOJS_OPT: toc:nil sdepth:2 view:overview buttons:nil path:./js/org-info.js

[[./headshot.jpg]]

I am a NYC-based software engineer. I'm currently at Twitter as a member of
[[https://cortex.twitter.com][Cortex]] and the Machine Learning Platform Tools team. Previously, I was a member
of Observability Applications at [[https://www.uber.com][Uber]], where I worked on forecasting and anomaly
detection for time series metrics.

My resume can be found [[file:resume.pdf][here]].

* Professional Interests

  I'm interested in *research engineering* and *machine learning infrastructure
  engineering* positions.

  More broadly, I'm especially interested in opportunities that operate at the
  intersection of *research* and *engineering*. To that end, the roles that
  most excite me provide opportunities to explore my interests in AI/ML; how
  they might be implemented or productized both scalably and performantly; and
  bring those research and modelling findings into production.

  If you and your team are working on projects that I'd make a good addition
  for, let's talk.

* Research Interests                                                  :noexport:

  My research interests lie in the fields of *machine learning*, *knowledge
  representation*, and *decision theory*.

  Specifically, I am drawn to the following questions:

  - What is *knowledge*? What does it mean to *know* something? Can a machine
    that achieves near-human performance at some task be said to truly *know*
    and *understand* that task beyond a behavioristic interpretation thereof?

  - How do we *model* and *represent* that knowledge to achieve precision,
    recall, and performance on par with -- possibly even beyond -- humans?

  - Traditional machines reason with "explicit" logic -- conditionals,
    pattern-matching, etc. How can we, as engineers, design and implement
    systems that can reason about *ambiguity* and *uncertainty*?
   
* Writing

** Engineering a Job-based Forecasting Workflow for Observability Anomaly Detection

   /Read the article on the Uber Engineering Blog [[http://eng.uber.com/observability-anomaly-detection/][here]]./

   My major project of early 2018 revolved around overhauling Observability
   Anomaly Detection's forecasting workflow to allow for performant forecast
   backfilling. In this article, I discuss the product-centric motivations for
   doing so, outline the primary performance bottlenecks, and discuss the design
   that the team decided to base our solution -- and all subsequent
   optimizations -- around.

   [[file:img/data-pooling.png]]

** Implementing Model-Agnosticism in Uberâ€™s Real-Time Anomaly Detection Platform

   /Read on the Uber Engineering Blog [[http://eng.uber.com/observability-anomaly-detection/][here]]./
    
   One of my first sizeable projects at Uber Observability was implementing
   support for multiple forecasting models in our anomaly detection pipeline. The
   pre-existing architecture was built around a single-model assumption that
   stored forecasting results in a single, top-level mapping; this data model
   made it cumbersome to add in support for new forecasting models later down the
   line, as our team attempted to do shortly after I joined.

   [[file:img/dynamic-thresholds.png]]

   In this article, I give a brief overview of anomaly detection within Uber's
   Observability stack; detail the thought process that went into my design for a
   "model-agnostic" data model to extend the pre-existing one; as well as the
   resulting rollout strategy. 

   #+ATTR_HTML: :width 60% :height 60%
   [[file:img/multi-model.png]]
   
* Contact

   - GitHub :: [[https://github.com/jinnovation][github.com/jinnovation]]
   - LinkedIn :: [[https://linkedin.com/in/jinnovation][linkedin.com/in/jinnovation]]
   - Email :: <first initial><last name>082693<at>gmail.com

# Local Variables:
# org-html-head-include-default-style: nil
# org-html-validation-link: ""
# End:
